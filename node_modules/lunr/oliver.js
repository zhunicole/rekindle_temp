var fs = require('fs')

var store = {}

var hash = function (str) {
  return str.split("")
    .reduce(function (memo, char) {
      var memo = ((memo << 5) - memo) - char.charCodeAt(0);
      return memo & memo
    }, 0)
}

fs.readFile('/usr/share/dict/words', 'ascii', function (err, words) {
  words
    .split("\n")
    .reduce(function (cache, word) {
      var h = hash(word)
      if (h in cache) console.log('collision on', word)
      cache[h] = true
      return cache
    }, {})
})

var oliver = function (haystack, needle) {
  var stacks = {}

  var distances = []

  for (var i = 0; i < needle.length; i++) {
    stacks[needle[i]] = [-Infinity]
  }

  for (var i = 0; i < haystack.length; i++) {
    var char = haystack[i]

    if (char in stacks) {
      stacks[char].unshift(i)

      var heads = Object.keys(stacks).map(function (key) {
        return stacks[key][0]
      })

      var max = Math.max.apply(null, heads),
          min = Math.min.apply(null, heads)

      distances.push(max - min)
    }
  }

  return Math.min.apply(null, distances)
}
